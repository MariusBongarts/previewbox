{"version":3,"file":"api-fetcher.js","sourceRoot":"","sources":["../../../src/lib/services/api-fetcher.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,gCAAgC,EAAC,MAAM,yDAAyD,CAAC;AAIzG,MAAM,CAAN,IAAY,QAGX;AAHD,WAAY,QAAQ;IAClB,mDAAuC,CAAA;IACvC,2CAA+B,CAAA;AACjC,CAAC,EAHW,QAAQ,KAAR,QAAQ,QAGnB;AAWD,MAAM,UAAU,iBAAiB,CAC/B,QAAwB;IAExB,OAAO,MAAM,IAAI,QAAQ,CAAC;AAC5B,CAAC;AAED,MAAM,CAAC,MAAM,oBAAoB,GAAG,KAAK,EACvC,GAAW,EACX,OAEC,EACsC,EAAE;IACzC,IAAI,CAAC;QACH,MAAM,QAAQ,GAAG,MAAM,KAAK,CAC1B,GAAG,OAAO,CAAC,MAAM,QAAQ,kBAAkB,CAAC,GAAG,CAAC,EAAE,EAClD;YACE,OAAO,EAAE;gBACP,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM;aAC/B;SACF,CACF,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;YACjB,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE,CAAC;gBAC5B,OAAO,EAAC,KAAK,EAAE,QAAQ,CAAC,iBAAiB,EAAC,CAAC;YAC7C,CAAC;YACD,OAAO,EAAC,KAAK,EAAE,QAAQ,CAAC,aAAa,EAAC,CAAC;QACzC,CAAC;QACD,MAAM,iBAAiB,GAAG,CAAC,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAsB,CAAC;QACvE,OAAO,EAAC,IAAI,EAAE,gCAAgC,CAAC,iBAAiB,CAAC,EAAC,CAAC;IACrE,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,EAAC,KAAK,EAAE,QAAQ,CAAC,aAAa,EAAC,CAAC;IACzC,CAAC;AACH,CAAC,CAAC","sourcesContent":["import {mapLinkMetaDataToLinkPreviewData} from '../adapters/meta-api/mapper/open-graph-meta-data-mapper';\nimport {OpenGraphMetaData} from '../adapters/meta-api/model/open-graph-meta-data';\nimport {LinkPreviewData} from '../domain/models/link-preview-data';\n\nexport enum ApiError {\n  API_LIMIT_REACHED = 'API_LIMIT_REACHED',\n  UNKNOWN_ERROR = 'UNKNOWN_ERROR',\n}\n\ntype ApiSuccessResponse<T> = {\n  data: T;\n};\ntype ApiErrorResponse = {\n  error: ApiError;\n};\n\nexport type ApiResponse<T> = ApiSuccessResponse<T> | ApiErrorResponse;\n\nexport function isSuccessResponse<T>(\n  response: ApiResponse<T>\n): response is ApiSuccessResponse<T> {\n  return 'data' in response;\n}\n\nexport const fetchLinkPreviewData = async (\n  url: string,\n  options: {\n    apiUrl: string;\n  }\n): Promise<ApiResponse<LinkPreviewData>> => {\n  try {\n    const response = await fetch(\n      `${options.apiUrl}?url=${encodeURIComponent(url)}`,\n      {\n        headers: {\n          origin: window.location.origin,\n        },\n      }\n    );\n    if (!response.ok) {\n      if (response.status === 429) {\n        return {error: ApiError.API_LIMIT_REACHED};\n      }\n      return {error: ApiError.UNKNOWN_ERROR};\n    }\n    const openGraphMetaData = (await response.json()) as OpenGraphMetaData;\n    return {data: mapLinkMetaDataToLinkPreviewData(openGraphMetaData)};\n  } catch (error) {\n    return {error: ApiError.UNKNOWN_ERROR};\n  }\n};\n"]}