{"version":3,"file":"link_test.js","sourceRoot":"","sources":["../../src/test/link_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {fixture, assert, expect} from '@open-wc/testing';\nimport {html} from 'lit/static-html.js';\nimport '../link.js';\nimport {PreviewBoxLinkElement} from '../link.js';\nimport {\n  extractFaviconElement,\n  extractImageElement,\n  wait,\n} from './test-utils.js';\nimport {byTestId, TEST_IDS} from '../lib/util/test-helper.js';\nimport {urlToOrigin} from '../lib/util/url-helper.js';\n\nsuite('previewbox-link', () => {\n  test('is defined', () => {\n    const el = document.createElement('previewbox-link');\n    assert.instanceOf(el, PreviewBoxLinkElement);\n  });\n\n  test('it applies styles', async () => {\n    const el = (await fixture(\n      html`<previewbox-link\n        href=\"https://web-highlights.com/\"\n      ></previewbox-link>`\n    )) as PreviewBoxLinkElement;\n    await el.updateComplete;\n    assert.equal(getComputedStyle(el).display, 'block');\n  });\n\n  test('renders a link preview with fetched meta data from an externalurl', async () => {\n    const el = await fixture(\n      html`<previewbox-link\n        href=\"https://web-highlights.com/\"\n      ></previewbox-link>`\n    );\n    await wait(1500);\n    const link = el.shadowRoot!.querySelector(\n      byTestId(TEST_IDS.ANCHOR_ELEMENT)\n    )! as HTMLAnchorElement;\n    const img = extractImageElement(el)!.shadowRoot!.querySelector(\n      byTestId(TEST_IDS.IMAGE)\n    )! as HTMLImageElement;\n    const favicon =\n      extractFaviconElement(el)!.shadowRoot?.querySelector('img')!;\n    assert.equal(link.href, 'https://web-highlights.com/');\n    assert.equal(img.src, 'https://web-highlights.com/images/wh-thumbnail.png');\n    assert.equal(favicon.src, 'https://web-highlights.com/favicon.ico');\n  });\n  test('renders a link preview with manually set data', async () => {\n    const url = 'https://example.org/test';\n    const date = '2024-01-01';\n    const title = 'Manually set title';\n    const description = 'Manually set description';\n    const author = 'Jon Doe';\n    const imageUrl =\n      'https://images.pexels.com/photos/356056/pexels-photo-356056.jpeg?auto=compress&cs=tinysrgb&w=1200&h=630&dpr=2';\n    const imageAlt = 'Manually set image alt';\n    const faviconUrl = 'https://web-highlights.com/favicon.ico';\n\n    const el = await fixture(\n      html`<previewbox-link\n        url=${url}\n        date=${date}\n        title=${title}\n        description=${description}\n        author=${author}\n        imageUrl=${imageUrl}\n        imageAlt=${imageAlt}\n        faviconUrl=${faviconUrl}\n        target=\"_self\"\n        rel=\"nofollow\"\n      ></previewbox-link>`\n    );\n    const linkElement = el.shadowRoot!.querySelector(\n      byTestId(TEST_IDS.ANCHOR_ELEMENT)\n    )! as HTMLAnchorElement;\n    const img = extractImageElement(el)!.shadowRoot!.querySelector(\n      byTestId(TEST_IDS.IMAGE)\n    )! as HTMLImageElement;\n    const favicon =\n      extractFaviconElement(el)!.shadowRoot?.querySelector('img')!;\n    const titleElement = el.shadowRoot!.querySelector(\n      byTestId(TEST_IDS.TITLE)\n    )! as HTMLDivElement;\n    const descriptionElement = el.shadowRoot!.querySelector(\n      byTestId(TEST_IDS.DESCRIPTION)\n    )! as HTMLDivElement;\n    const authorElement = el.shadowRoot!.querySelector(\n      byTestId(TEST_IDS.AUTHOR)\n    )! as HTMLSpanElement;\n    const originElement = el.shadowRoot!.querySelector(\n      byTestId(TEST_IDS.ORIGIN)\n    )! as HTMLSpanElement;\n    assert.equal(linkElement.href, url);\n    assert.equal(linkElement.target, '_self');\n    assert.equal(linkElement.rel, 'nofollow');\n    assert.equal(img.src, imageUrl);\n    assert.equal(favicon.src, faviconUrl);\n    assert.equal(favicon.alt, `Favicon`);\n    assert.include(titleElement.textContent, title);\n    assert.include(descriptionElement.textContent, description);\n    assert.equal(authorElement.textContent, author);\n    assert.equal(originElement.textContent, urlToOrigin(url));\n  });\n\n  test('throws an error if no href or url is provided', async () => {\n    try {\n      (await fixture(\n        html`<previewbox-link></previewbox-link>`\n      )) as PreviewBoxLinkElement;\n      assert.equal(\n        true,\n        false,\n        'Should not reach this as an error should be thrown'\n      );\n    } catch (e) {\n      assert.instanceOf(e, Error);\n    }\n  });\n\n  test('renders loading skeletons', async () => {\n    const el = await fixture(\n      html`<previewbox-link\n        href=\"https://web-highlights.com/\"\n      ></previewbox-link>`\n    );\n\n    expect(el.shadowRoot!.querySelector(byTestId(TEST_IDS.TITLE_SKELETON))!).to\n      .exist;\n    expect(el.shadowRoot!.querySelector(byTestId(TEST_IDS.FAVICON_SKELETON))!)\n      .to.exist;\n    expect(\n      extractImageElement(el)!.shadowRoot!.querySelector(\n        byTestId(TEST_IDS.IMAGE_SKELETON)\n      )!\n    ).to.exist;\n  });\n\n  test('renders a fallback image and favicon if the image and favicon URLs are not correct', async () => {\n    const url = 'https://example.org/test';\n    const date = '2024-01-01';\n    const title = 'Manually set title';\n    const description = 'Manually set description';\n    const author = 'Jon Doe';\n    const imageUrl = 'https://invalidimage.png';\n    const imageAlt = 'Manually set image alt';\n    const faviconUrl = 'https://invalidfavicon.ico';\n\n    const el = await fixture(\n      html`<previewbox-link\n        url=${url}\n        date=${date}\n        title=${title}\n        description=${description}\n        author=${author}\n        imageUrl=${imageUrl}\n        imageAlt=${imageAlt}\n        faviconUrl=${faviconUrl}\n        target=\"_self\"\n        rel=\"nofollow\"\n      ></previewbox-link>`\n    );\n    await wait(500);\n\n    const titleElement = el.shadowRoot!.querySelector(\n      byTestId(TEST_IDS.TITLE)\n    )! as HTMLDivElement;\n    assert.include(titleElement.textContent, title);\n    expect(\n      extractImageElement(el)!.shadowRoot!.querySelector(\n        byTestId(TEST_IDS.IMAGE_FALLBACK)\n      )!\n    ).to.exist;\n    expect(\n      extractFaviconElement(el)?.shadowRoot!.querySelector(\n        byTestId(TEST_IDS.FAVICON_FALLBACK)\n      )!\n    ).to.exist;\n  });\n});\n"]}